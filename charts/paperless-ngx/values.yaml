# Default values for paperless-ngx.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

paperless:
  image:
    repository: ghcr.io/paperless-ngx/paperless-ngx
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  persistence:
    consume:
        enabled: false
        # storageClass: "-"
        # accessMode: ReadWriteOnce
        # size: 4Gi
        # existingClaim: ""
    media:
        enabled: false
        # storageClass: "-"
        # accessMode: ReadWriteOnce
        # size: 8Gi
        # existingClaim: ""
    data:
        enabled: false
        # storageClass: "-"
        # accessMode: ReadWriteOnce
        # size: 8Gi
        # existingClaim: ""
    export:
        enabled: false
        # storageClass: "-"
        # accessMode: ReadWriteOnce
        # size: 8Gi
        # existingClaim: ""

  extraVolumes: []
  extraVolumeMounts: []

  securityContext: {}
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000

  resources: {}
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi


imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

gotenberg:
  enabled: false
  image:
    repository: docker.io/gotenberg/gotenberg
    pullPolicy: IfNotPresent
    tag: "latest"
  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources: { }
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

tika:
  enabled: false
  image:
    repository: ghcr.io/paperless-ngx/tika
    pullPolicy: IfNotPresent
    tag: "latest"
  securityContext: { }
    # capabilities:
    #   drop:
    #   - ALL
    # readOnlyRootFilesystem: true
    # runAsNonRoot: true
    # runAsUser: 1000
  resources: { }
    # limits:
    #   cpu: 100m
    #   memory: 128Mi
    # requests:
    #   cpu: 100m
    #   memory: 128Mi

postgresql:
  architecture: standalone
  auth:
    database: paperless
    postgresPassword: changeme
    #existingSecret: ""
  primary:
    persistence:
      enabled: false
      #storageClass: "-"
      #size: 8Gi

redis:
  architecture: standalone
  replica:
    replicaCount: 0
  auth:
    enabled: true
    #existingSecret: ""
  master:
    persistence:
      enabled: false
      #storageClass: "-"
      #size: 8Gi

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

nodeSelector: {}

tolerations: []

affinity: {}
