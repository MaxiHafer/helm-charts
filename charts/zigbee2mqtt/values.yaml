# Default values for zigbee2mqtt.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: ghcr.io/koenkk/zigbee2mqtt
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
# fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
# runAsUser: 1000

service:
  type: ClusterIP
  port: 8080

environment:
  TZ: UTC

ingress:
  enabled: false
  className: "nginx"
  pathType: ImplementationSpecific
  annotations: {}
  # kubernetes.io/ingress.class: nginx
  # kubernetes.io/tls-acme: "true"
  hosts:
    - host: zigbee2mqtt.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls:
    - secretName: zigbee2mqtt-tls
      hosts:
        - zigbee2mqtt.local

genericDevicePlugin:
  enabled: true
  identifier: squat.io/zigbee

config:
  data:
    # Let new devices join our zigbee network
    permit_join: false
    # Docker Compose makes the MQTT-Server available using "mqtt" hostname
    mqtt:
      base_topic: zigbee2mqtt
      server: mqtt://mqtt
    # Zigbee Adapter path
    serial:
      port: /dev/ttyUSB0
    # Enable the Zigbee2MQTT frontend
    frontend:
      port: 8080
    # Let Zigbee2MQTT generate a new network key on first start
    advanced:
      network_key: GENERATE

persistence:
  enabled: false
  size: 2Gi
  # storageClassName: ""

resources:
  limits: null
  requests: null
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
#   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
